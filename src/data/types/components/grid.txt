// Types
import type { E<%camel%>Device } from '<%typesImport%>';

type T<%camel%>GridSafeAlignment<T extends string> = `${'safe' | 'unsafe'} ${T}`;

type T<%camel%>GridJustifyKeys =
    | 'normal'
    | 'stretch'
    | 'center'
    | 'start'
    | 'flex-start'
    | 'end'
    | 'flex-end'
    | 'left'
    | 'right'
    | 'space-between'
    | 'space-around'
    | 'space-evenly';

type T<%camel%>GridJustifyItemsKeys = T<%camel%>GridJustifyKeys | 'self-start' | 'self-end' | 'anchor-center';

type T<%camel%>GridAlignKeys =
    | 'normal'
    | 'stretch'
    | 'center'
    | 'start'
    | 'flex-start'
    | 'end'
    | 'flex-end'
    | 'baseline'
    | 'first baseline'
    | 'last baseline';

type T<%camel%>GridAlignContentKeys =
    | T<%camel%>GridAlignKeys
    | 'space-between'
    | 'space-around'
    | 'space-evenly';

type T<%camel%>GridJustify =
    | T<%camel%>GridJustifyKeys
    | T<%camel%>GridSafeAlignment<T<%camel%>GridJustifyKeys>
    | `legacy ${T<%camel%>GridJustifyKeys}`;

type T<%camel%>GridJustifyItems =
    | T<%camel%>GridJustifyItemsKeys
    | T<%camel%>GridSafeAlignment<T<%camel%>GridJustifyItemsKeys>
    | `legacy ${T<%camel%>GridJustifyItemsKeys}`;

type T<%camel%>GridAlign = T<%camel%>GridAlignKeys | T<%camel%>GridSafeAlignment<T<%camel%>GridAlignKeys>;

type T<%camel%>GridAlignContent =
    | T<%camel%>GridAlignContentKeys
    | T<%camel%>GridSafeAlignment<T<%camel%>GridAlignContentKeys>;

export const <%upper%>_GRID_GAP = {} as const;

export type E<%camel%>GridGap = (typeof <%upper%>_GRID_GAP)[keyof typeof <%upper%>_GRID_GAP];

/**
 * Интерфейс пропсов для компонента <%camel%>Grid
 */
export interface I<%camel%>GridProps {
    /** Тег элемента задающего сетку */
    tag?: string;

    /** Кол-во колонок в сетке */
    cols?: number | number[] | string | string[];

    /** Кол-во рядов в сетке */
    rows?: number | number[] | string | string[];

    /** Направление сетки */
    flow?: string | string[];

    /** Высота элемента выходящего за заданную сетку */
    autoRows?: string | string[];

    /** Длина элемента выходящего за заданную сетку */
    autoCols?: string | string[];

    /** align-items сетки */
    align?: T<%camel%>GridAlign | T<%camel%>GridAlign[] | null;

    /** align-content сетки */
    alignContent?: T<%camel%>GridAlignContent | T<%camel%>GridAlignContent[] | null;

    /** justify-content сетки */
    justify?: T<%camel%>GridJustify | T<%camel%>GridJustify[] | null;

    /** justify-items сетки */
    justifyItems?: T<%camel%>GridJustifyItems | T<%camel%>GridJustifyItems[] | null;

    /** Размер отступов сетки */
    gap?: E<%camel%>GridGap | E<%camel%>GridGap[] | null;

    /** Размер отступов рядов сетки */
    rowGap?: E<%camel%>GridGap | E<%camel%>GridGap[] | null;

    /** Размер отступов колонок сетки */
    columnGap?: E<%camel%>GridGap | E<%camel%>GridGap[] | null;

    /** Точки останова для адаптивного дизайна */
    devices?: E<%camel%>Device[];
}
